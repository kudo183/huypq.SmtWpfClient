using huypq.SmtWpfClient.Abstraction;
using System.Collections.Generic;
using huypq.SmtWpfClientSQL.Demo.Dto;

namespace huypq.SmtWpfClientSQL.Demo.DataModel
{
    public partial class <EntityName>DataModel : BaseDataModel<<EntityName>Dto>
    {
        partial void ToDtoPartial(ref <EntityName>Dto dto);
        partial void FromDtoPartial(<EntityName>Dto dto);
        partial void SetPropertiesDependencyPartial();
        partial void DisplayTextPartial();

        <DefaultValues>

        <PrivateFields>

        <PublicProperties>

        public override void SetCurrentValueAsOriginalValue()
        {
            <SetCurrentValueAsOriginalValue>
        }

        public override void Update(object obj)
        {
            var dataModel = obj as <EntityName>DataModel;
            if (dataModel == null)
            {
                return;
            }

            <Update>
        }

        public override bool HasChange()
        {
            <HasChange>
        }

        public override <EntityName>Dto ToDto()
        {
            var dto = new <EntityName>Dto();
            dto.State = State;
            <ToDto>

            ToDtoPartial(ref dto);

            return dto;
        }

        public override void FromDto(<EntityName>Dto dto)
        {
            State = dto.State;
            <FromDto>

            FromDtoPartial(dto);
        }

        protected override void SetPropertiesDependency()
        {
            <SetPropertiesDependency>
            SetPropertiesDependencyPartial();
        }

        private string _displayText;
        public override string DisplayText
        {
            get
            {
                <DisplayText>
                DisplayTextPartial();
                return _displayText;
            }
        }

        <ForeignKeyDataModel>

        <ReferenceDataSource>
    }
}
